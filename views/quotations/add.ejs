<%- include('../layout') %>
  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  </head>

  <body>


    <div class="main-content">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="mb-0">
          <i class="fas fa-file-invoice text-primary me-2"></i>
          Create New Quotation
        </h4>
        <a href="/quotations" class="btn btn-outline-secondary">
          <i class="fas fa-arrow-left me-1"></i>
          Back to Quotations
        </a>
      </div>

      <div class="row">
        <div class="col-lg-8">
          <div class="card">
            <div class="card-header">
              <h5 class="mb-0">Quotation Information</h5>
            </div>
            <div class="card-body">
              <% if (error) { %>
                <div class="alert alert-danger">
                  <i class="fas fa-exclamation-circle me-2"></i>
                  <%= error %>
                </div>
                <% } %>

                  <form method="POST" action="/quotations/add" onsubmit="return validateForm(this)" id="quotationForm">
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="customer" class="form-label">Customer *</label>
                        <select class="form-select" id="customer" name="customer" required
                          onchange="loadCustomerInfo()">
                          <option value="">Select Customer</option>
                          <% customers.forEach(customer=> { %>
                            <option value="<%= customer._id %>" data-name="<%= customer.name %>"
                              data-email="<%= customer.email %>" data-phone="<%= customer.phone %>"
                              <%=formData.customer===customer._id.toString() ? 'selected' : '' %>>
                              <%= customer.name %> - <%= customer.email %>
                            </option>
                            <% }) %>
                        </select>
                      </div>

                      <div class="col-md-6 mb-3">
                        <label for="lead" class="form-label">Related Lead (Optional)</label>
                        <select class="form-select" id="lead" name="lead">
                          <option value="">Select Lead</option>
                          <% leads.forEach(lead=> { %>
                            <option value="<%= lead._id %>" <%=formData.lead===lead._id.toString() ? 'selected' : '' %>>
                              <%= lead.name %> - <%= lead.source %>
                            </option>
                            <% }) %>
                        </select>
                      </div>
                    </div>

                    <!-- Customer Info Display -->
                    <div id="customerInfo" class="alert alert-info d-none mb-3">
                      <h6><i class="fas fa-user me-2"></i>Customer Information</h6>
                      <div class="row">
                        <div class="col-md-4">
                          <strong>Name:</strong> <span id="customerName"></span>
                        </div>
                        <div class="col-md-4">
                          <strong>Email:</strong> <span id="customerEmail"></span>
                        </div>
                        <div class="col-md-4">
                          <strong>Phone:</strong> <span id="customerPhone"></span>
                        </div>
                      </div>
                    </div>

                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="validUntil" class="form-label">Valid Until *</label>
                        <input type="date" class="form-control" id="validUntil" name="validUntil"
                          value="<%= formData.validUntil || '' %>" required>
                      </div>

                      <div class="col-md-6 mb-3">
                        <label for="status" class="form-label">Status</label>
                        <select class="form-select" id="status" name="status">
                          <option value="draft" <%=formData.status==='draft' ? 'selected' : '' %>>Draft</option>
                          <option value="sent" <%=formData.status==='sent' ? 'selected' : '' %>>Send to Customer
                          </option>
                        </select>
                      </div>
                    </div>

                    <!-- Products Section -->
                    <div class="card mb-3">
                      <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">Products</h6>
                        <button type="button" class="btn btn-sm btn-primary" onclick="addProduct()">
                          <i class="fas fa-plus me-1"></i>Add Product
                        </button>
                      </div>
                      <div class="card-body">
                        <div id="productsContainer">
                          <!-- Products will be added here dynamically -->
                        </div>
                      </div>
                    </div>

                    <!-- Totals Section -->
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="totalAmount" class="form-label">Total Amount *</label>
                        <input type="number" class="form-control" id="totalAmount" name="totalAmount"
                          value="<%= formData.totalAmount || '' %>" step="0.01" readonly>
                      </div>

                      <div class="col-md-6 mb-3">
                        <label for="discount" class="form-label">Discount</label>
                        <input type="number" class="form-control" id="discount" name="discount"
                          value="<%= formData.discount || '0' %>" step="0.01" min="0" onchange="calculateTotal()">
                      </div>
                    </div>

                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="tax" class="form-label">Tax (GST)</label>
                        <input type="number" class="form-control" id="tax" name="tax" value="<%= formData.tax || '0' %>"
                          step="0.01" min="0" onchange="calculateTotal()">
                      </div>

                      <div class="col-md-6 mb-3">
                        <label for="finalAmount" class="form-label">Final Amount *</label>
                        <input type="number" class="form-control" id="finalAmount" name="finalAmount"
                          value="<%= formData.finalAmount || '' %>" step="0.01" readonly>
                      </div>
                    </div>

                    <div class="mb-3">
                      <label for="terms" class="form-label">Terms & Conditions</label>
                      <textarea class="form-control" id="terms" name="terms" rows="3"
                        placeholder="Terms and conditions for this quotation"><%= formData.terms || 'This quotation is valid for 30 days from the date of issue.' %></textarea>
                    </div>

                    <div class="mb-3">
                      <label for="notes" class="form-label">Notes</label>
                      <textarea class="form-control" id="notes" name="notes" rows="3"
                        placeholder="Additional notes about the quotation"><%= formData.notes || '' %></textarea>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                      <a href="/quotations" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-1"></i>
                        Cancel
                      </a>
                      <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i>
                        Create Quotation
                      </button>
                    </div>
                  </form>
            </div>
          </div>
        </div>


      </div>

      <!-- Product Row Template -->
      <template id="productRowTemplate">
        <div class="product-row border rounded p-3 mb-3">
          <div class="d-flex justify-content-between align-items-start mb-2">
            <h6 class="mb-0">Product #<span class="product-number"></span></h6>
            <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeProduct(this)">
              <i class="fas fa-trash"></i>
            </button>
          </div>

          <div class="row">
            <div class="col-md-6 mb-2">
              <label class="form-label">Product *</label>
              <select class="form-select product-select" name="products[0][product]" required
                onchange="updateProductInfo(this)">
                <option value="">Select Product</option>
                <% products.forEach(product=> { %>
                  <option value="<%= product._id %>" data-price="<%= product.price %>"
                    data-stock="<%= product.stockQuantity %>">
                    <%= product.name %> - â‚¹<%= product.price.toLocaleString() %> (Stock: <%= product.stockQuantity %>)
                  </option>
                  <% }) %>
              </select>
            </div>

            <div class="col-md-3 mb-2">
              <label class="form-label">Quantity *</label>
              <input type="number" class="form-control quantity-input" name="products[0][quantity]" min="1" required
                onchange="calculateRowTotal(this)">
            </div>

            <div class="col-md-3 mb-2">
              <label class="form-label">Price *</label>
              <input type="number" class="form-control price-input" name="products[0][price]" step="0.01" required
                onchange="calculateRowTotal(this)">
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 mb-2">
              <label class="form-label">Discount</label>
              <input type="number" class="form-control discount-input" name="products[0][discount]" step="0.01" min="0"
                value="0" onchange="calculateRowTotal(this)">
            </div>

            <div class="col-md-6 mb-2">
              <label class="form-label">Total</label>
              <input type="number" class="form-control total-input" step="0.01" readonly>
            </div>
          </div>
        </div>
      </template>
    </div>

    <script>
      let productCount = 0;

      document.addEventListener('DOMContentLoaded', function () {
        const validUntilInput = document.getElementById('validUntil');
        if (!validUntilInput.value) {
          const futureDate = new Date();
          futureDate.setDate(futureDate.getDate() + 30);
          validUntilInput.value = futureDate.toISOString().split('T')[0];
        }

        addProduct(); 
      });

      function addProduct() { // add akrta he
        const template = document.getElementById('productRowTemplate');
        const container = document.getElementById('productsContainer');
        const clone = template.content.cloneNode(true);
        productCount++;

        clone.querySelector('.product-number').textContent = productCount;

        const inputs = clone.querySelectorAll('input, select');
        inputs.forEach(input => {
          if (input.name) {
            input.name = input.name.replace('[0]', `[${productCount - 1}]`);
          }
        });

        container.appendChild(clone);
      }

      function removeProduct(button) { // remove karta he
        button.closest('.product-row').remove();
        calculateTotal();
      }

      function updateProductInfo(select) { // price or sock ko auto set karta he
        const row = select.closest('.product-row');
        const selectedOption = select.options[select.selectedIndex];
        if (selectedOption.value) {
          const price = parseFloat(selectedOption.dataset.price);
          const stock = parseInt(selectedOption.dataset.stock);

          row.querySelector('.price-input').value = price;
          row.querySelector('.quantity-input').max = stock;

          calculateRowTotal(select);
        }
      }

      function calculateRowTotal(element) { // total,discount,tax milakar final amount deta he
        const row = element.closest('.product-row');
        const quantity = parseFloat(row.querySelector('.quantity-input').value) || 0;
        const price = parseFloat(row.querySelector('.price-input').value) || 0;
        const discount = parseFloat(row.querySelector('.discount-input').value) || 0;

        const subtotal = quantity * price;
        const total = subtotal - discount;
        row.querySelector('.total-input').value = total.toFixed(2);

        calculateTotal();
      }

      function calculateTotal() {
        const productRows = document.querySelectorAll('.product-row');
        let totalAmount = 0;

        productRows.forEach(row => {
          const rowTotal = parseFloat(row.querySelector('.total-input').value) || 0;
          totalAmount += rowTotal;
        });

        const discount = parseFloat(document.getElementById('discount').value) || 0;
        const tax = parseFloat(document.getElementById('tax').value) || 0;

        const finalAmount = totalAmount - discount + tax;

        document.getElementById('totalAmount').value = totalAmount.toFixed(2);
        document.getElementById('finalAmount').value = finalAmount.toFixed(2);
      }

      function validateForm(form) {
        const productRows = document.querySelectorAll('.product-row');
        const products = [];

        if (productRows.length === 0) {
          alert('Please add at least one product.');
          return false;
        }

        for (let row of productRows) {
          const product = row.querySelector('.product-select')?.value;
          const quantity = row.querySelector('.quantity-input')?.value;
          const price = row.querySelector('.price-input')?.value;
          const discount = row.querySelector('.discount-input')?.value || 0;

          if (!product || !quantity || !price || Number(quantity) <= 0) {
            alert('Each product must have a valid product, quantity, and price.');
            return false;
          }

          products.push({
            product: product.trim(),
            quantity: parseInt(quantity),
            price: parseFloat(price),
            discount: parseFloat(discount)
          });
        }

        const existingInput = form.querySelector('input[name="products"]');
        if (existingInput) {
          existingInput.remove();
        }

        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'products';
        hiddenInput.value = JSON.stringify(products);
        form.appendChild(hiddenInput);

        return true;
      }
    
    
    </script>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
  </body>

  </html>