<%- include('../layout') %>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Record Sale</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<body>
   <div class="main-content">
     <div class=" container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="mb-0">
                <i class="fas fa-dollar-sign text-primary me-2"></i> Record New Sale
            </h4>
            <a href="/sales" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Sales
            </a>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Sale Information</h5>
            </div>
            <div class="card-body">
                <% if (error) { %>
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i> <%= error %>
                </div>
                <% } %>

                <form method="POST" action="/sales/add" onsubmit="return validateForm(this)" id="saleForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="customer" class="form-label">Customer *</label>
                            <select class="form-select" id="customer" name="customer" required onchange="loadCustomerInfo()">
                                <option value="">Select Customer</option>
                                <% customers.forEach(customer => { %>
                                <option value="<%= customer._id %>" data-name="<%= customer.name %>" data-email="<%= customer.email %>" data-phone="<%= customer.phone %>" <%= formData.customer === customer._id.toString() ? 'selected' : '' %>>
                                    <%= customer.name %> - <%= customer.email %>
                                </option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="saleDate" class="form-label">Sale Date *</label>
                            <input type="date" class="form-control" id="saleDate" name="saleDate" value="<%= formData.saleDate || new Date().toISOString().split('T')[0] %>" required>
                        </div>
                    </div>

                    <div id="customerInfo" class="alert alert-info d-none mb-3">
                        <h6><i class="fas fa-user me-2"></i>Customer Information</h6>
                        <div class="row">
                            <div class="col-md-4"><strong>Name:</strong> <span id="customerName"></span></div>
                            <div class="col-md-4"><strong>Email:</strong> <span id="customerEmail"></span></div>
                            <div class="col-md-4"><strong>Phone:</strong> <span id="customerPhone"></span></div>
                        </div>
                    </div>

                    <div class="card mb-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">Products</h6>
                            <button type="button" class="btn btn-sm btn-primary" onclick="addProduct()">
                                <i class="fas fa-plus me-1"></i>Add Product
                            </button>
                        </div>
                        <div class="card-body" id="productsContainer"></div>
                    </div>

                    <input type="hidden" name="products" id="productsInput">

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="totalAmount" class="form-label">Total Amount *</label>
                            <input type="number" class="form-control" id="totalAmount" name="totalAmount" value="<%= formData.totalAmount || '' %>" step="0.01" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="discount" class="form-label">Discount</label>
                            <input type="number" class="form-control" id="discount" name="discount" value="<%= formData.discount || '0' %>" step="0.01" min="0" onchange="calculateTotal()">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">c
                            <label for="tax" class="form-label">Tax (GST)</label>
                            <input type="number" class="form-control" id="tax" name="tax" value="<%= formData.tax || '0' %>" step="0.01" min="0" onchange="calculateTotal()">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="finalAmount" class="form-label">Final Amount *</label>
                            <input type="number" class="form-control" id="finalAmount" name="finalAmount" value="<%= formData.finalAmount || '' %>" step="0.01" readonly>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="paymentStatus" class="form-label">Payment Status</label>
                            <select class="form-select" id="paymentStatus" name="paymentStatus">
                                <option value="pending" <%= formData.paymentStatus==='pending' ? 'selected' : '' %>>Pending</option>
                                <option value="partial" <%= formData.paymentStatus==='partial' ? 'selected' : '' %>>Partial</option>
                                <option value="paid" <%= formData.paymentStatus==='paid' ? 'selected' : '' %>>Paid</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="paymentMethod" class="form-label">Payment Method</label>
                            <select class="form-select" id="paymentMethod" name="paymentMethod">
                                <option value="cash" <%= formData.paymentMethod==='cash' ? 'selected' : '' %>>Cash</option>
                                <option value="card" <%= formData.paymentMethod==='card' ? 'selected' : '' %>>Card</option>
                                <option value="online" <%= formData.paymentMethod==='online' ? 'selected' : '' %>>Online</option>
                                <option value="cheque" <%= formData.paymentMethod==='cheque' ? 'selected' : '' %>>Cheque</option>
                                <option value="bank-transfer" <%= formData.paymentMethod==='bank-transfer' ? 'selected' : '' %>>Bank Transfer</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="3"><%= formData.notes || '' %></textarea>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <a href="/sales" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Record Sale
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Template for dynamic product rows -->
        <template id="productRowTemplate">
            <div class="product-row border rounded p-3 mb-3">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <h6 class="mb-0">Product #<span class="product-number"></span></h6>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeProduct(this)">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-2">
                        <label class="form-label">Product *</label>
                        <select class="form-select product-select" required onchange="updateProductInfo(this)">
                            <option value="">Select Product</option>
                            <% products.forEach(product => { %>
                            <option value="<%= product._id %>" data-price="<%= product.price %>" data-stock="<%= product.stockQuantity %>">
                                <%= product.name %> - â‚¹<%= product.price.toLocaleString() %> (Stock: <%= product.stockQuantity %>)
                            </option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="col-md-3 mb-2">
                        <label class="form-label">Quantity *</label>
                        <input type="number" class="form-control quantity-input" min="1" required onchange="calculateRowTotal(this)">
                    </div>
                    <div class="col-md-3 mb-2">
                        <label class="form-label">Price *</label>
                        <input type="number" class="form-control price-input" step="0.01" required onchange="calculateRowTotal(this)">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-2">
                        <label class="form-label">Discount</label>
                        <input type="number" class="form-control discount-input" step="0.01" min="0" value="0" onchange="calculateRowTotal(this)">
                    </div>
                    <div class="col-md-6 mb-2">
                        <label class="form-label">Total</label>
                        <input type="number" class="form-control total-input" step="0.01" readonly>
                    </div>
                </div>
            </div>
        </template>
    </div>
   </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        let productCount = 0;

        function loadCustomerInfo() {
            const selected = document.querySelector('#customer option:checked');
            document.getElementById('customerName').textContent = selected.dataset.name || '';
            document.getElementById('customerEmail').textContent = selected.dataset.email || '';
            document.getElementById('customerPhone').textContent = selected.dataset.phone || '';
            document.getElementById('customerInfo').classList.toggle('d-none', !selected.value);
        }

        function addProduct() { // add karta he
            const template = document.getElementById('productRowTemplate').content.cloneNode(true);
            template.querySelector('.product-number').textContent = productCount + 1;
            document.getElementById('productsContainer').appendChild(template);
            productCount++;
        }

        function removeProduct(btn) { // remove karta he
            btn.closest('.product-row').remove();
            calculateTotal();
        }

        function updateProductInfo(select) { // price and quantaty auto file hoti he
            const row = select.closest('.product-row');
            const price = parseFloat(select.selectedOptions[0].dataset.price || 0);
            const stock = parseInt(select.selectedOptions[0].dataset.stock || 0);
            row.querySelector('.price-input').value = price;
            row.querySelector('.quantity-input').max = stock;
            calculateRowTotal(select);
        }

        function calculateRowTotal(el) { // total,discount and tax ko lekar final amount deta he
            const row = el.closest('.product-row');
            const qty = parseFloat(row.querySelector('.quantity-input').value) || 0;
            const price = parseFloat(row.querySelector('.price-input').value) || 0;
            const discount = parseFloat(row.querySelector('.discount-input').value) || 0;
            const total = (qty * price) - discount;
            row.querySelector('.total-input').value = total.toFixed(2);
            calculateTotal();
        }

        function calculateTotal() {
            const rows = document.querySelectorAll('.product-row');
            let total = 0;
            rows.forEach(r => total += parseFloat(r.querySelector('.total-input').value) || 0);
            const discount = parseFloat(document.getElementById('discount').value) || 0;
            const tax = parseFloat(document.getElementById('tax').value) || 0;
            const final = total - discount + tax;
            document.getElementById('totalAmount').value = total.toFixed(2);
            document.getElementById('finalAmount').value = final.toFixed(2);
        }

        function validateForm(form) {
            const rows = document.querySelectorAll('.product-row');
            if (rows.length === 0) {
                alert('Please add at least one product.');
                return false;
            }
            const products = Array.from(rows).map(r => ({
                product: r.querySelector('.product-select').value,
                quantity: parseInt(r.querySelector('.quantity-input').value),
                price: parseFloat(r.querySelector('.price-input').value),
                discount: parseFloat(r.querySelector('.discount-input').value) || 0
            }));
            document.getElementById('productsInput').value = JSON.stringify(products); // json format me transfer karta he
            return true;
        }

        document.addEventListener('DOMContentLoaded', () => {
            addProduct();
            loadCustomerInfo();
        });
    </script>
</body>

</html>